<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zr.dao.auto.mapper.SysApiMapper">
  <resultMap id="BaseResultMap" type="com.zr.dao.auto.model.SysApi">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="api_pid" jdbcType="INTEGER" property="apiPid" />
    <result column="api_pids" jdbcType="VARCHAR" property="apiPids" />
    <result column="is_leaf" jdbcType="BIT" property="isLeaf" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, api_pid, api_pids, is_leaf, api_name, url, sort, `level`, `status`
  </sql>
  <select id="selectByExample" parameterType="com.zr.dao.auto.model.SysApiExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_api
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_api
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zr.dao.auto.model.SysApiExample">
    delete from sys_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zr.dao.auto.model.SysApi" useGeneratedKeys="true">
    insert into sys_api (api_pid, api_pids, is_leaf,
      api_name, url, sort,
      `level`, `status`)
    values (#{apiPid,jdbcType=INTEGER}, #{apiPids,jdbcType=VARCHAR}, #{isLeaf,jdbcType=BIT},
      #{apiName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER},
      #{level,jdbcType=INTEGER}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zr.dao.auto.model.SysApi" useGeneratedKeys="true">
    insert into sys_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="apiPid != null">
        api_pid,
      </if>
      <if test="apiPids != null">
        api_pids,
      </if>
      <if test="isLeaf != null">
        is_leaf,
      </if>
      <if test="apiName != null">
        api_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="apiPid != null">
        #{apiPid,jdbcType=INTEGER},
      </if>
      <if test="apiPids != null">
        #{apiPids,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null">
        #{isLeaf,jdbcType=BIT},
      </if>
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zr.dao.auto.model.SysApiExample" resultType="java.lang.Long">
    select count(*) from sys_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_api
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.apiPid != null">
        api_pid = #{record.apiPid,jdbcType=INTEGER},
      </if>
      <if test="record.apiPids != null">
        api_pids = #{record.apiPids,jdbcType=VARCHAR},
      </if>
      <if test="record.isLeaf != null">
        is_leaf = #{record.isLeaf,jdbcType=BIT},
      </if>
      <if test="record.apiName != null">
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_api
    set id = #{record.id,jdbcType=INTEGER},
      api_pid = #{record.apiPid,jdbcType=INTEGER},
      api_pids = #{record.apiPids,jdbcType=VARCHAR},
      is_leaf = #{record.isLeaf,jdbcType=BIT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      `level` = #{record.level,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zr.dao.auto.model.SysApi">
    update sys_api
    <set>
      <if test="apiPid != null">
        api_pid = #{apiPid,jdbcType=INTEGER},
      </if>
      <if test="apiPids != null">
        api_pids = #{apiPids,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null">
        is_leaf = #{isLeaf,jdbcType=BIT},
      </if>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zr.dao.auto.model.SysApi">
    update sys_api
    set api_pid = #{apiPid,jdbcType=INTEGER},
      api_pids = #{apiPids,jdbcType=VARCHAR},
      is_leaf = #{isLeaf,jdbcType=BIT},
      api_name = #{apiName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
